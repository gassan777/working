Hi, everyone. This is the metadata week. And you may recall I talked a bit about how important metadata is in the first week of the course, the introduction. It's extremely important to almost every data creation activity. And one of the reasons is that documentation is involved in almost every data creation activity. And metadata is a kind of documentation: rigorous, formal, machine-readable documentation of data and datasets. Extremely important. In this video that you're listening to right now, I start with a simple colloquial definition. Then we look at some examples of metadata. And then we refine the definition a little bit. We then go on to talk about what metadata is for. I present a standard taxonomy of metadata: descriptive, administrative, structural. And then I think you'll find it an interesting conversation about the census in which metadata is data and data is metadata. Here's our simple colloquial definition. What's metadata? Data about data. And you'll hear that a lot. What is metadata? It's data about data. Now, I don't think everybody actually knows what they're saying when they say data about data. I don't think they realize some of the problems with defining metadata that way. But that's what I'm here for. Let's look at some examples. So, this is information that might be metadatum. So, in particular, what we're imagining here a dataset of temperatures on the surface of the Earth. And that the metadata for that dataset might include - Oh. And by the way, temperatures on the surface of the Earth at some particular time. So it's a snapshot. So metadata for that dataset might plausibly include: first, the nature of the data. You might have some metadata that says, this dataset has temperatures on the surface of the Earth. That could come in handy, that information. Second, you might have metadata that indicates the location relevant to the data. For instance, a 3D box of plant latitude, longitude, and altitude. You might also want to indicate when the data was recorded and where the recording equipment was located. Because the recording equipment might be located at some distance from the location where the temperatures presumably are happening. And, often, that's the case. We have geosynchronous satellites in orbit which are collecting electromagnetic radiation, and we're able to transform that into temperatures. You might want to record exactly what equipment was used, what equipment, what model, what settings, what calibrations. This could be extremely important in understanding the data. Of course, you want to indicate the data format and file format, perhaps, and the schemas at every level: semantics, syntax, encoding. If you're using any standards, you want to record those. If the dataset undergoes changes, perhaps corrections, perhaps data cleaning, you're going to want to indicate who made those changes, when, what those changes were, and why they were made. If the dataset is derived from other datasets, you want to indicate the input datasets and the algorithms that were involved in those derivations. If it's raw data, straight from the instrument, you won't have those. Of course, you want to make sure that your data is not been corrupted in some way. So, you'll need some kind of fixed e-signature like checksum. You'll need identifier for this dataset. You'll have to refer to it reliably, and probably this identifier will be part of a system of identification that allows you to navigate changes in format and changes in content as well, version control. You probably want to indicate the organization responsible. Give credit to them, for instance, perhaps the funder as well. And if the data is under copyright, you want to indicate that. Any restrictions on how it can be used, it might be legal restrictions or it might be company policy, there might be funder rules, you'll want to indicate those as well. So, if you look over those, I think the first somewhat impressive observation is that this is a really varied list. The bits of information here in this bulleted list, quite different. And the implied purposes for recording them are also quite different. So, the first thing to notice here about this list is that it is extremely varied in nature. All kinds of information here. And at the same time, there is a similar variation in the purposes that are implied. You can tell that this information is going to be used for certain sorts of things, and those sorts of things are correspondingly varied. This is an interesting fact about metadata. It varies widely in nature, and it's used for a wide variety of things. So, here we have an actual example, a real example of some dataset metadata. The dataset is about den locations for maternal polar bears in Alaska. And you'll see that it's an XML. So, it's metadata that's in a semi-structured format. And you'll see it contained here are things like the data of the metadata, a title, what kind of data it is: tabular digital data, an abstract of the report, an indication of the time interval involved - 1910 to 2010. And then also you can see an indication of the bounding box within which these observations were made. And there's a lot more here. You can follow the link if you would like. There's also a lot of information about the attributes that are used, semantics for attributes. So, this is an example of some scientific natural science metadata. Here's an example of bibliographic metadata. So this is data that we collect about bibliographic objects like books. You would see an ISBN identifier, an indication of the author or using the double term called creator, title, date, publisher, subject, pages. This is metadata in the bibliographic world because the book itself is the information object, and information about the book is the metadata. So, we're going to refine this definition just a bit. We're going to integrate into data about data something about the purpose, and this particular refinement is one that's fairly well-known. So, we're going to use it. This is from Jane Greenberg, "structured data about an object that supports functions associated with the designated object". So we still have data about the object, we still have the suggestion that it's formal in some way. That's what structure here is intended to connote. And the term object is being used in a kind of a special, technical way but the way in which it is being used includes data set. So, it's still data about data or data about another kind of information object, and its formal structured data and it supports functions associated with the object. Supports functions associated with the object. What functions? You saw them implied at the beginning with examples, but let's generalize them. So in the left column, we have functions that are mostly human-oriented. This is a real loose division here, so mostly human-oriented functions such as finding potentially relevant data – metadata can help you find the data set you want; determine relevance – you could get enough information to decide whether or not this data really is relevant to the purposes that you have that's really about the right proteins or about polar bears or about polar bears in Alaska and so on. Metadata helps you understand and interpret data. It often provides the semantics for the attributes that are being used as well as other more general context for the data set. It helps you assess data quality and integrity. It helps you authenticate the data. It helps you avoid inappropriate use, perhaps illegal use, or use that could get you sued. Now, we use digital tools and computer applications in all of these mostly human-oriented functions. So it's not supposed to suggest that computational tools are not involved. In mostly machine-oriented functions though, digital tools are in the foreground. So one thing that metadata assists with is determining what tools can process or read the data set you have. So, as you know, because it's the bane of our existence, you have to have the right tools and the right data format. If you're going to put them together, right, things going to happen. So the annotation of a data set with the exact file structure version of the format is critical to knowing which tool is going to actually read reliably the software, process it and analyze, display it, and so. Metadata is also critical when you're integrating data from different sources. You have to know a lot about the data that you're integrating. And it's because you're not familiar with the data typically, you're maybe working in one community with the data that you know really well and now you have to integrate data from another community. All the information that you can get about those data sets, attributes, data formats etc cetera, critical. Metadata also helps you convert and migrate data, to organize it, and so on. Now, related to those functions, there is a standard classification of data as descriptive, administrative, and structural. Descriptive metadata, here is data that supports things like finding the resource, understanding it, evaluating it, deciding exactly which version or which format of the data you're going to use. Administrative data is divided into three sorts. There's technical, what is called technical data. These aren't my terms. I would have chosen different ones. So technical data is, in fact, the data I was referring to earlier that makes it clear what file format you have, what data models are being used, what syntax and serialization you have to deal with, and what versions of those things and you need to know that if you're going to successfully read it into a piece of software. Administrative preservation data helps us with ensuring that 10 years from now data is still usable. We'll talk more about that in a couple of weeks. And then also under administrative data are intellectual property rights and other policy-related annotations. Structural metadata, as you know, it's often the case that we have a lot of different parts to a complicated system of data, and we need to make sure that we can assemble all the pieces in the right order and understand exactly what their relationship is one to another, and that's the structural area of metadata. Okay. Now, I'd like to say a few words, about the distinction between metadata and data if it is a distinction. And the first point I'd like to make, is that in fact metadata is data. So here's the meta data in these two relations, these two tables. And obviously this metadata is being treated as data. It's data in a relational format. What's going on here, equally obviously, is that we're using a relational database to manage data sets and metadata about those data sets. And this includes the location URL that allows us to get to these data sets. So pause for a moment and look at these two tables which are of course far too simple to actually be used in a real workplace. But you get the idea. So to get full value for metadata you have to treat it as data. It is data. And it really deserves the same kind of management that data does. And typically for the most part, metadata is managed with relational databases or sometimes in XML databases or XML documents. Now, you might be scratching your head about something here because if metadata is data and we treat it as data, we manage it as data. We in effect have data sets of metadata because that's what a relational database is. Well, we're going to need metadata about those data sets, those databases so that metadata collectively will also need its own metadata which you will need to manage with metadata and so on. So this is turtles all the way down. In fact, at some point, pretty quickly, we decide we have enough metadata and for practical reasons bring it to a halt. What's important is not the possibility of turtles all the way down. We can avoid that. But one person's meta data. I love these slogans. You know it. One person's metadata is another person's data. And often one works with metadata to generate new knowledge, new understanding, new business processes. Metadata is data and it's often just as important as the data. I know that sounds a little odd. But in real life, in the workplace, it's not uncommon to get a lot of value out of the metadata. So, all metadata is data. Fine. But, some data isn't metadata. So what makes some and only some data, metadata? The question is what makes some and only some data, metadata. And I know what you're thinking. We've already addressed that. It's data about data. Sounds easy enough, let's take a closer look. So the question is what data is metadata and what data is not metadata. And you're thinking well, data about data is metadata. Data about polar bears, Buick's, proteins, other stuff. That's not metadata. Here's a data point. The temperature is thirty one point five degrees. Now information about this data point might be temperature of what? What is the unit? When was this recorded? For what purpose? And so on. Now here's a fragment of relation. It's a tuple, a triple here, not in the RDF sense. We see the temperature indicated, thirty one point five. We see the unit and we see the instrument used in the recording. And then you'll see another XML representation of the same information. Here's the thing. The instrument identification might have been metadata on the entire dataset. This was a dataset that used the same instrument, would we really consider the identification of the instrument part of the data or would be consider it data about the dataset? And similarly the unit designation, Celsius, that might have been metadata on a schema, an annotation on the unit attribute in the schema. So, where does this take us, is meditation on metadata? I think it gets us here. In real life, in the lab, in the workplace. The distinction between data and metadata is a practical one. It's a pragmatic one. It's not based on some deep, philosophical, mathematical insight into data. It's usually a matter of what simplifies your work and delivers the functionality that you need. So, I'm going to suggest this for a second time with another example similar to the previous slide but different. Now, imagine a process that's generating datasets by making, say, 10,000 observations at some particular place over an interval of time. If you're recording this data, you'll probably treat time as data. Every observation will happen at a particular point in time and you'll record that point of time. You'll have a column in the dataset, for instance, if you're using a relational model. You're probably going to treat the place where these observations were made as metadata attached to the dataset. But if we tweak this example and reverse space and time, now imagining that we're recording temperature at a single point in time, but in many different locations in space. In that case, we're probably going to treat time as metadata, and space as data. The spatial locations now become a column in the table, and time is no longer a column. And the motivation for doing this of course, is it's a practical motivation. We're reducing the complexity of our relations and we are avoiding update anomalies. We're not recording redundant information. Notice also that if we anticipate integrating these records with records where both time and space information varies, that is where both time and space information varies, we're probably going to convert our records here to record both time and space as data. You'll now have two columns in the table, because you're going to be integrating those records with records that have two columns and we're recording temperatures at different places and different times. So, in that case it's all going to be data. And often the kind of data that we're recording, and the kind of metadata that we need to record about the datasets fits this model, and the decision about what's data and what's metadata turns out to be pretty much a practical one, trying to manage complexity, trying to not unnecessarily duplicate information. We don't want update anomalies, but nevertheless, we're prepared to make or metadata data, if that's what we need to do integration with other datasets. Still. We might wonder, is this distinction which is typically pragmatic or practical really always pragmatic or practical, or is there some data which is truly inherently or essentially data about data and so deserves to be understood as metadata per se. And in fact I think there are some cases that fit that or at least might fit that characterization. So, for instance, data that is specifically about the values in a data set is arguably truly metadata. So, for instance, if you indicate the accuracy range of a value, you know, plus or minus something, that seems to be truly a metadata, data about data. The annotation of data with data types also truly inherently metadata apparently at least value constraints. Similarly, the notation system and that now we're not actually arguably at least looking at the value, but looking at the representation of the value in a particular notation system. And again, that seems to be arguably metadata in a substantial sense. Another class of information that might possibly be truly metadata, substantively essentially metadata, are information about the data set itself. So, features of the data set. An example would be the size of the data set. The number of observations. That's something of course that would not go naturally into a column. It does seem meta, the characterization of the size of the data set, the coverage of the data set. So, here we're not talking about when an observation was recorded or where an observation was recorded. We're talking about the entire interval of time where the observations were recorded or the box of space where the observations were recorded. That's really a characteristic of the data set and then a quite different kind of characteristic of course would be that various schemas and of format characterizations that describe the data set. Those things also seem to be meditative in a substantial sense. One of the interesting questions here if you're interested in this sort of thing. So, in this slide you see that in the far left and middle, we have examples where we raise the possibility that the XML Tag or generic identifier or the attribute name in a relation might also be considered metadata and there are definitely people who would say that those things are metadata, or that the schema for an XML document is metadata. And I invite you to puzzle over all these things if you're so inclined. If you're not, take comfort in remembering that for the most part, most of the time, it doesn't matter. We're making the meta data data distinction based upon practical needs in the workplace. Okay, this is the last slide in the video, and it summarizes the last few slides of discussion and sets the scene for further meditation on your own should you be interested. Okay, so, what we've seen is that some sorts of information are considered to be classic metadata: who, where, when, what's it made out of, what's it about, stuff like that, but when you look closely, it also appears that the data metadata distinction is probably for the most part based on practical considerations about what's important, what kinds of observations are being repeated, what kinds of observations, what kind of information is not being repeated, stuff like that and not based on a clear hard distinction. None of that takes away anything from the profound importance of metadata to successful data science. But I also want to say because I think this is interesting and likely to be important that some metadata does seem to be in a unique distinctive way data about data. For instance accuracy, data type notation, those characteristics, and some meta data also seems to be clearly about data sets such as size, coverage, owner, model, encoding features and so on. And so, in fact, despite my emphasis on the distinction being usually a practical one and not a clear hard definite one. Nevertheless, it does seem that some metadata is metadata in the strict sense. And, that's the end of the first video on defining metadata, giving examples of metadata, purposes of metadata and whether or not there's a clear hard distinction between metadata and data or whether it's simply a practical matter. As you heard, it's usually a practical matter but perhaps not always. See you next time.