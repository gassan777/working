Hi everyone. This video is titled Common Metadata Ambiguities. So metadata is often very casually developed and used. And, as a result, it often has an ambiguous semantics, either because of how it was developed or because how it's being used or both. And this can result in problems, especially for robots. Why? Because it may not always be clear to a robot what an attribute value pair is about. Metadata, typically, it takes the form of attribute value pairs, presumably about some object. And because of the ambiguities I just mention, robots look at those attribute value pairs and not at all clear if what the attribute value pair is supposed to apply to, maybe clear what the attribute is, what the value is, but what's it about? This will frequently be obvious to humans, just problematic for robots. Attributes themselves actually can be problematic to robots, again, even when they're perfectly clear to humans. So humans, we can figure things out, but leaving the ambiguities in place to be figured out by humans as we go, sometimes correctly, sometimes not, not safe. It's not safe, and it's not fair to robots. What am I talking about? As very simple example to get your intuitions going, imagine a collection of digital images of paintings. There are a lot of these online, and it is not at all uncommon. When you look at the metadata for these collections, it's not at all uncommon to see attached to the same image, something like this, an ID: BNF4242a, which simply identifies the object, the artist that presumably made the object, the format which is presumably what the format of the object is. What? JPEG. Leonardo made a JPEG? BNF4242a is a JPEG? Oh, no. It's also an oil on panel painting. Is BNF4242a a JPEG, or is it oil on panel? Now, you know what's going on here. I'm not pretending like anybody is really confused, but robots will be confused because these attribute value pairs seem to suggest that BNF4242a was created by Leonardo da Vinci, and is a JPEG, and it's also a painting, oil on panel. This is a common problem. It's a problem that can go unnoticed, as long as you're not processing your metadata computationally, doing inferences and queries, and so on. As long as you're just looking at it, maybe retrieving it, staring at the ports, you're a human being. You're not confused by any of this. Robots, however, are. And so when you move away from some collection of digital images of paintings to data sets that are, in some sense, are rather a high stakes, this could be medical applications. These could be aircraft management, crisis management, all sorts of things. You want to be able to support reliable, rigorous processing, inferencing, queries. And attribute value pairs like this are actually inconsistent, and any knowledge base, any inferencing based on them, at some point, is going to be vulnerable. Recall our example of the bibliographic data from earlier. Nobody blinked. Nobody said, "Oh, that's weird." Maybe you did, but it's not at all uncommon to look at that data and say, "Yeah, that's fine," because in fact, this is real data. Come to think of it, this is real data, and it works for the most part. Pause, take a closer look. And the problem here is, what exactly is being described by these attribute value pairs? And to get yourself in the right mood for this, you might recall the distinctions we were making with FRBR, F-R-B-R. So the book by Matthew West, actually it did exist in two different editions: a traditional physical edition and an e-book. So the way the metadata is actually done, there is a single identifier, an ISBN, which is used in both cases. So that raises the question: what is this identifier identifying? It can't be identifying both of these because they're not the same thing. These are different editions. So that identifier must be identifying something which unifies these two things, which is independent of them, which they somehow specialize as a subclass. So, okay, but don't we also need identifiers for these two different editions? And, in fact, there is an identifier for the e-book, and you see it right here, identifier and there's a URI. At least, I hope it's a URI. We don't see a corresponding one for the physical edition. This is the real world, so it's not perfect. Now let's go down through this act of value pairs. So we already see there's some peculiarity here with the identifier, it's not identifying the edition. If it were, we wouldn't use the same identifier down here. The author is not the author of the edition. The author Matthew West is the author of developing high quality data models which is a thing that exists in two editions. That thing has a particular title, a particular date, publisher, a subject, more subject. And in a language- Now here too you might pause and say, "Well, isn't that language a feature of the text of the work, or is that a bit too far when it comes to distinctions." Let's move on to pages, 408 pages in the physical edition and 389 in the eBook. Wait a minute. Again this thing that has 389 pages, it's not this thing that has 400 pages. No think it have 408 pages and 389 pages. This just confirms that the ISBN is referring to something else, not the edition. As is all of these other features except for this format, PDF. Format PDF is an attribute value pair that applies to this edition and only this edition. Pages four away applies to this edition and only this edition. All of these things apply to, I would say, neither of these editions but rather apply to the work that these editions instantiate. This identifier, however, this identifier in fact identifies this edition. It doesn't identify the work that has these attribute value pairs. What fun. So a rigorous system of metadata concepts that support attribute value pairs that are clear about what they apply to is an easy to come up with and may seem unnecessary to a human. But these attribute value pairs that we've been noticing as applying different things really do apply to different things. And lights out inferencing advanced queries, things done by robots with metadata. You're going to have problems that humans won't have. Here's a similar, but a kind of the converse problem where we have two meanings for the same attribute. Again these are real examples. So for a while it was a common practice to use Dublin Core attributes like this. You would say that a particular book, here its book 2424a, was in English with the Dublin Core attributes used like this. And you would also say that a particular collection of books was in English by using an identifier to offer the collection. And then using the attribute DC:lang, DC language to refer to the language of the books in the collection. Something peculiar going on here, and it's not the kind of thing that's going to confuse a human being. We know what's being said. We know what's being said here. Nevertheless, to say that a book is in English using DC:lang and then to use DC:lang to also say that the books in the collection are in English, that's two senses of DC:lang because the sense in which your book is in English is not the same sense in which a collection is an English collection. Not a problem for humans. It is a problem. It is a liability for robots. And no, it's not going to be a problem for a library, but it is going to be a problem in aircraft control, in managing medical equipment, in managing transportation. It's an ambiguity that's genuine and will give unpredictable results. We have the same problem here. Some attribute value pairs here apply to this and some apply to the work this instantiates. Symmetric view value pairs here, these two anyway apply to this and others apply to the work it instantiates. You don't have a problem with this. Humans don't have a problem saying that one in the same thing is a hilarious novel that's mustard stained, even though the novels got mustard stained and the physical object is not hilarious. So these, far from distinctions are real and when they're not observed, they will confuse inferencing and paralyze and data management. They'll confused robots, but they won't confuse you. You can be proud of that I guess. But we're trying to make the world safe for robots. Hard work but fun. See you next time.